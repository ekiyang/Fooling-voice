音声インタフェースを備えたロボットの製作課題用の音声認識ツールキットです．

使い方：
./julius.exe -C julius.jconf

を実行して，「前進」「後退」「右」「左」のいずれかをマイクに向かって話してください．
すると，（おそらく正しい）認識結果が標準出力に出力されます．

julius.jconfを編集することで，音声認識の動作を変更することができます．
julius.jconfを適当なテキストエディタで開いて編集してください．
どう変更すべきかについては，julius.jconfの中にコメントが書いてあります．

julius.jconfの中で，「test.dict」を指定しているところがあります．
この部分を変更すると，認識する単語を変更することができるようになります．
test.dictの書式を真似て，いろんな辞書を作成してみましょう．

================================================================================

実験後半で無線ロボットを操作するプログラムを書くことになりますが，
そのときには

./julius.exe -C julius.jconf | ./result.pl | [後半で作成したプログラム]

と実行してください．
result.plは，juliusの出力結果を標準入力から受け取り，
認識結果の単語だけを標準出力に出力するperlプログラムです．


=================================================================================

実験では主に孤立単語認識を取り扱いますが，juliusはネットワーク文法を使って
文章を認識することもできます．

./julius.exe -C grammer.jconf

を実行すると，
「えーと小泉さんお願いします」
「えー遠山お願いします」
「はい」
などといった文章を認識することができます．

==================================================================================

ネットワーク文法の作り方

grammerディレクトリの下に，

hoge.voca
hoge.grammer

の二つのファイルを作ります．
hoge.vocaには，ネットワーク文法の単位となる単語を，
hoge.grammerにはネットワーク文法を記述します．
attendant.vocaとattendant.grammerを参考してください．

例えば，hoge.vocaに
--hoge.voca--------------------------
% SUBJECT
僕は	b o k u w a 
私は	w a t a sh i w a 
% NAME
峯松	m i N e m a ts u 
鈴木	s u z u k i 
松田	m a ts u d a
% DESU
です	d e s u 
ですよ	d e s u y o
---------------------------------------

hoge.grammerに
--hoge.grammer-------------------------
S	: SUBJECT NAME DESU 
S	: SUBJECT NAME 
S	: NAME DESU 
S	: NAME 
---------------------------------------

このように書いてください．
以上のファイルができたら，以下のコマンドを実行します．

./mkdfa.pl hoge

これにより，hoge.dict，hoge.term，hoge.dfaが自動生成されます．
juliusはこの三つのファイルを使って音声認識を行うことができます．
元のディレクトリに戻り，
grammer.jconfの-gramの部分を

-gram grammer/hoge

に書き換え，

./julius.exe -C grammer.jconf

を実行してください．

